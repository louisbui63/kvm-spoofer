diff --git a/hw/smbios/smbios.c b/hw/smbios/smbios.c
index a394514264..3bacc33dce 100644
--- a/hw/smbios/smbios.c
+++ b/hw/smbios/smbios.c
@@ -110,21 +110,33 @@ static struct {
     uint16_t speed;
 } type17;
 
-static QEnumLookup type41_kind_lookup = {
-    .array = (const char *const[]) {
-        "other",
-        "unknown",
-        "video",
-        "scsi",
-        "ethernet",
-        "tokenring",
-        "sound",
-        "pata",
-        "sata",
-        "sas",
-    },
-    .size = 10
-};
+static struct {
+    const char *description;
+} type27;
+
+static struct {
+    const char *description;
+} type28;
+
+static struct {
+    const char *description;
+} type29;
+
+static QEnumLookup type41_kind_lookup = {.array =
+                                             (const char *const[]){
+                                                 "other",
+                                                 "unknown",
+                                                 "video",
+                                                 "scsi",
+                                                 "ethernet",
+                                                 "tokenring",
+                                                 "sound",
+                                                 "pata",
+                                                 "sata",
+                                                 "sas",
+                                             },
+                                         .size = 10};
+
 struct type41_instance {
     const char *designation, *pcidev;
     uint8_t instance, kind;
@@ -554,6 +566,9 @@ bool smbios_skip_table(uint8_t type, bool required_table)
 #define T16_BASE 0x1000
 #define T17_BASE 0x1100
 #define T19_BASE 0x1300
+#define T27_BASE 0x1B00
+#define T28_BASE 0x1C00
+#define T29_BASE 0x1D00
 #define T32_BASE 0x2000
 #define T41_BASE 0x2900
 #define T127_BASE 0x7F00
@@ -932,6 +947,48 @@ static void smbios_build_type_19_table(unsigned instance, unsigned offset,
     SMBIOS_BUILD_TABLE_POST;
 }
 
+static void smbios_build_type_27_table(void)
+{
+    SMBIOS_BUILD_TABLE_PRE(27, T27_BASE, true); /* required */
+    t->temperature_probe_handler =
+        0xFFFF; // no thermal probe (for now at least)
+    t->device_type_and_status =
+        0b01100011;            // Means that it's a fan and it's doing well
+    t->cooling_unit_group = 0; // we don't have those
+    t->oem_defined = 0;
+    t->nominal_speed = 200;
+    SMBIOS_TABLE_SET_STR(27, description, type27.description);
+    SMBIOS_BUILD_TABLE_POST;
+}
+
+static void smbios_build_type_28_table(void)
+{
+    SMBIOS_BUILD_TABLE_PRE(28, T28_BASE, true); /* required */
+    t->location_and_status = 0b01100011; // it's on the CPU and it's doing well
+    t->maximum_value = 1270;             // in 1/10 째C
+    t->minimum_value = -1270;            // in 1/10 째C
+    t->resolution = 1000;                // in 1/1000 째C
+    t->tolerance = 0x8000;               // unknown
+    t->accuracy = 0x8000;                // unknown
+    t->nominal_value = 100;              // in 1/10 째C
+    SMBIOS_TABLE_SET_STR(28, description, type28.description);
+    SMBIOS_BUILD_TABLE_POST;
+}
+
+static void smbios_build_type_29_table(void)
+{
+    SMBIOS_BUILD_TABLE_PRE(29, T29_BASE, true); /* required */
+    t->location_and_status = 0b01100011; // it's on the CPU and it's doing well
+    t->maximum_value = 0x4000;           // in milliamps
+    t->minimum_value = 0;                // in milliamps
+    t->resolution = 1;                   // in milliamps
+    t->tolerance = 0x8000;               // unknown
+    t->accuracy = 0x8000;                // unknown
+    t->nominal_value = 0x8000;           // unknown
+    SMBIOS_TABLE_SET_STR(29, description, type29.description);
+    SMBIOS_BUILD_TABLE_POST;
+}
+
 static void smbios_build_type_32_table(void)
 {
     SMBIOS_BUILD_TABLE_PRE(32, T32_BASE, true); /* required */
@@ -1031,6 +1088,10 @@ void smbios_set_defaults(const char *manufacturer, const char *product,
     SMBIOS_SET_DEFAULT(type4.version, version);
     SMBIOS_SET_DEFAULT(type17.loc_pfx, "DIMM");
     SMBIOS_SET_DEFAULT(type17.manufacturer, manufacturer);
+
+    SMBIOS_SET_DEFAULT(type27.description, "FAN0");
+    SMBIOS_SET_DEFAULT(type28.description, "TPROBE0");
+    SMBIOS_SET_DEFAULT(type29.description, "VPROBE0");
 }
 
 static void smbios_entry_point_setup(SmbiosEntryPointType ep_type)
@@ -1158,6 +1219,10 @@ static bool smbios_get_tables_ep(MachineState *ms,
      */
     assert((mem_array_size + offset) < (T32_BASE - T19_BASE));
 
+    smbios_build_type_27_table();
+    smbios_build_type_28_table();
+    smbios_build_type_29_table();
+
     smbios_build_type_32_table();
     smbios_build_type_38_table();
     smbios_build_type_41_table(errp);
diff --git a/include/hw/firmware/smbios.h b/include/hw/firmware/smbios.h
index f066ab7262..c1dc620552 100644
--- a/include/hw/firmware/smbios.h
+++ b/include/hw/firmware/smbios.h
@@ -303,6 +303,45 @@ struct smbios_type_19 {
     uint64_t extended_ending_address;
 } QEMU_PACKED;
 
+/* SMBIOS type 27 - Cooling Device */
+struct smbios_type_27 {
+    struct smbios_structure_header header;
+    uint16_t temperature_probe_handler;
+    uint8_t device_type_and_status;
+    uint8_t cooling_unit_group;
+    uint32_t oem_defined;
+    uint16_t nominal_speed;
+    uint8_t description;
+} QEMU_PACKED;
+
+/* SMBIOS type 28 - Temperature Probe */
+struct smbios_type_28 {
+    struct smbios_structure_header header;
+    uint8_t description;
+    uint8_t location_and_status;
+    uint16_t maximum_value;
+    uint16_t minimum_value;
+    uint16_t resolution;
+    uint16_t tolerance;
+    uint16_t accuracy;
+    uint32_t oem_defined;
+    uint16_t nominal_value;
+} QEMU_PACKED;
+
+/* SMBIOS type 29 - Electrical Current Probe */
+struct smbios_type_29 {
+    struct smbios_structure_header header;
+    uint8_t description;
+    uint8_t location_and_status;
+    uint16_t maximum_value;
+    uint16_t minimum_value;
+    uint16_t resolution;
+    uint16_t tolerance;
+    uint16_t accuracy;
+    uint32_t oem_defined;
+    uint16_t nominal_value;
+} QEMU_PACKED;
+
 /* SMBIOS type 32 - System Boot Information */
 struct smbios_type_32 {
     struct smbios_structure_header header;
